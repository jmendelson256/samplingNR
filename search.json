[{"path":"https://jmendelson256.github.io/samplingNR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 samplingNR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jmendelson256.github.io/samplingNR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jonathan Mendelson. Author, maintainer.","code":""},{"path":"https://jmendelson256.github.io/samplingNR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mendelson J (2023). samplingNR: Stratified sample allocation anticipated nonresponse. https://github.com/jmendelson256/samplingNR, https://jmendelson256.github.io/samplingNR/.","code":"@Manual{,   title = {samplingNR: Stratified sample allocation under anticipated nonresponse},   author = {Jonathan Mendelson},   year = {2023},   note = {https://github.com/jmendelson256/samplingNR, https://jmendelson256.github.io/samplingNR/}, }"},{"path":"https://jmendelson256.github.io/samplingNR/index.html","id":"samplingnr","dir":"","previous_headings":"","what":"Stratified sample allocation under anticipated nonresponse","title":"Stratified sample allocation under anticipated nonresponse","text":"samplingNR R package allows computing optimal allocations anticipated nonresponse. still development.","code":""},{"path":"https://jmendelson256.github.io/samplingNR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Stratified sample allocation under anticipated nonresponse","text":"can install development version samplingNR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"jmendelson256/samplingNR\")"},{"path":"https://jmendelson256.github.io/samplingNR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Stratified sample allocation under anticipated nonresponse","text":"Placeholder – add example . ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . also use GitHub Actions re-render README.Rmd every time push. example workflow can found : https://github.com/r-lib/actions/tree/v1/examples.","code":"library(samplingNR) ## basic example code"},{"path":"https://jmendelson256.github.io/samplingNR/news/index.html","id":"samplingnr-010-development-version","dir":"Changelog","previous_headings":"","what":"samplingNR 0.1.0 (development version)","title":"samplingNR 0.1.0 (development version)","text":"Added fn calc zeta Added truncated binomial functions, including testthat info Added NEWS.md file track changes package.","code":""}]
